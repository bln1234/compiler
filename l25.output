Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT LBRACE struct_def_list func_def main_block RBRACE

    2 struct_def_list: /* empty */
    3                | struct_def_list struct_def_stmt

    4 struct_def_stmt: STRUCT_DEF IDENT LBRACE struct_member_list RBRACE SEMICOLON

    5 struct_member_list: /* empty */
    6                   | struct_member_list declare_stmt SEMICOLON

    7 func_def: /* empty */
    8         | func_def func

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE
   10     | FUNC IDENT LPAREN RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE

   11 $@1: /* empty */

   12 main_block: MAIN $@1 block

   13 param_list: IDENT
   14           | param_list COMMA IDENT

   15 stmt_list: stmt SEMICOLON
   16          | stmt_list stmt SEMICOLON

   17 stmt: declare_stmt
   18     | array_declare_stmt
   19     | struct_declare_stmt
   20     | assign_stmt
   21     | if_stmt
   22     | while_stmt
   23     | input_stmt
   24     | output_stmt
   25     | func_call

   26 struct_declare_stmt: STRUCT IDENT IDENT ASSIGN LBRACE struct_init_list RBRACE
   27                    | STRUCT IDENT IDENT

   28 struct_init_list: expr
   29                 | struct_init_list COMMA expr

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT ASSIGN LBRACE number_list RBRACE

   31 number_list: NUMBER
   32            | number_list COMMA NUMBER

   33 declare_stmt: LET IDENT
   34             | LET IDENT ASSIGN expr

   35 assign_stmt: lvalue ASSIGN expr

   36 lvalue: IDENT
   37       | IDENT DOT IDENT
   38       | IDENT LBRACKET expr RBRACKET

   39 if_stmt: IF LPAREN bool_expr RPAREN block
   40        | IF LPAREN bool_expr RPAREN block ELSE block

   41 while_stmt: WHILE LPAREN bool_expr RPAREN block

   42 input_stmt: INPUT LPAREN ident_list RPAREN

   43 output_stmt: OUTPUT LPAREN expr_list RPAREN

   44 func_call: IDENT LPAREN arg_list RPAREN
   45          | IDENT LPAREN RPAREN

   46 arg_list: expr
   47         | arg_list COMMA expr

   48 expr_list: expr
   49          | expr_list COMMA expr

   50 ident_list: IDENT
   51           | ident_list COMMA IDENT

   52 bool_expr: expr EQ expr
   53          | expr NEQ expr
   54          | expr LT expr
   55          | expr GEQ expr
   56          | expr GT expr
   57          | expr LEQ expr

   58 expr: PLUS term
   59     | MINUS term
   60     | term
   61     | expr PLUS term
   62     | expr MINUS term

   63 term: term MUL factor
   64     | term DIV factor
   65     | factor

   66 factor: IDENT
   67       | IDENT DOT IDENT
   68       | IDENT LBRACKET expr RBRACKET
   69       | NUMBER
   70       | LPAREN expr RPAREN
   71       | func_call

   72 $@2: /* empty */

   73 block: LBRACE $@2 stmt_list RBRACE


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 30 31 32 69
IDENT (259) 1 4 9 10 13 14 26 27 30 33 34 36 37 38 44 45 50 51 66 67
    68
PROGRAM (260) 1
FUNC (261) 9 10
MAIN (262) 12
RETURN (263) 9 10
LET (264) 33 34
IF (265) 39 40
ELSE (266) 40
WHILE (267) 41
INPUT (268) 42
OUTPUT (269) 43
STRUCT_DEF (270) 4
STRUCT (271) 26 27
EQ (272) 52
NEQ (273) 53
LEQ (274) 57
GEQ (275) 55
LT (276) 54
GT (277) 56
ASSIGN (278) 26 30 34 35
PLUS (279) 58 61
MINUS (280) 59 62
MUL (281) 63
DIV (282) 64
LPAREN (283) 9 10 39 40 41 42 43 44 45 70
RPAREN (284) 9 10 39 40 41 42 43 44 45 70
LBRACKET (285) 30 38 68
RBRACKET (286) 30 38 68
LBRACE (287) 1 4 9 10 26 30 73
RBRACE (288) 1 4 9 10 26 30 73
COMMA (289) 14 29 32 47 49 51
SEMICOLON (290) 4 6 9 10 15 16
DOT (291) 37 67


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
struct_def_list (39)
    on left: 2 3, on right: 1 3
struct_def_stmt (40)
    on left: 4, on right: 3
struct_member_list (41)
    on left: 5 6, on right: 4 6
func_def (42)
    on left: 7 8, on right: 1 8
func (43)
    on left: 9 10, on right: 8
main_block (44)
    on left: 12, on right: 1
$@1 (45)
    on left: 11, on right: 12
param_list (46)
    on left: 13 14, on right: 9 14
stmt_list (47)
    on left: 15 16, on right: 9 10 16 73
stmt (48)
    on left: 17 18 19 20 21 22 23 24 25, on right: 15 16
struct_declare_stmt (49)
    on left: 26 27, on right: 19
struct_init_list (50)
    on left: 28 29, on right: 26 29
array_declare_stmt (51)
    on left: 30, on right: 18
number_list (52)
    on left: 31 32, on right: 30 32
declare_stmt (53)
    on left: 33 34, on right: 6 17
assign_stmt (54)
    on left: 35, on right: 20
lvalue (55)
    on left: 36 37 38, on right: 35
if_stmt (56)
    on left: 39 40, on right: 21
while_stmt (57)
    on left: 41, on right: 22
input_stmt (58)
    on left: 42, on right: 23
output_stmt (59)
    on left: 43, on right: 24
func_call (60)
    on left: 44 45, on right: 25 71
arg_list (61)
    on left: 46 47, on right: 44 47
expr_list (62)
    on left: 48 49, on right: 43 49
ident_list (63)
    on left: 50 51, on right: 42 51
bool_expr (64)
    on left: 52 53 54 55 56 57, on right: 39 40 41
expr (65)
    on left: 58 59 60 61 62, on right: 9 10 28 29 34 35 38 46 47 48
    49 52 53 54 55 56 57 61 62 68 70
term (66)
    on left: 63 64 65, on right: 58 59 60 61 62 63 64
factor (67)
    on left: 66 67 68 69 70 71, on right: 63 64 65
block (68)
    on left: 73, on right: 12 39 40 41
$@2 (69)
    on left: 72, on right: 73


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT LBRACE struct_def_list func_def main_block RBRACE

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . LBRACE struct_def_list func_def main_block RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT LBRACE . struct_def_list func_def main_block RBRACE

    $default  reduce using rule 2 (struct_def_list)

    struct_def_list  go to state 6


State 6

    1 program: PROGRAM IDENT LBRACE struct_def_list . func_def main_block RBRACE
    3 struct_def_list: struct_def_list . struct_def_stmt

    STRUCT_DEF  shift, and go to state 7

    $default  reduce using rule 7 (func_def)

    struct_def_stmt  go to state 8
    func_def         go to state 9


State 7

    4 struct_def_stmt: STRUCT_DEF . IDENT LBRACE struct_member_list RBRACE SEMICOLON

    IDENT  shift, and go to state 10


State 8

    3 struct_def_list: struct_def_list struct_def_stmt .

    $default  reduce using rule 3 (struct_def_list)


State 9

    1 program: PROGRAM IDENT LBRACE struct_def_list func_def . main_block RBRACE
    8 func_def: func_def . func

    FUNC  shift, and go to state 11
    MAIN  shift, and go to state 12

    func        go to state 13
    main_block  go to state 14


State 10

    4 struct_def_stmt: STRUCT_DEF IDENT . LBRACE struct_member_list RBRACE SEMICOLON

    LBRACE  shift, and go to state 15


State 11

    9 func: FUNC . IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE
   10     | FUNC . IDENT LPAREN RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE

    IDENT  shift, and go to state 16


State 12

   12 main_block: MAIN . $@1 block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 17


State 13

    8 func_def: func_def func .

    $default  reduce using rule 8 (func_def)


State 14

    1 program: PROGRAM IDENT LBRACE struct_def_list func_def main_block . RBRACE

    RBRACE  shift, and go to state 18


State 15

    4 struct_def_stmt: STRUCT_DEF IDENT LBRACE . struct_member_list RBRACE SEMICOLON

    $default  reduce using rule 5 (struct_member_list)

    struct_member_list  go to state 19


State 16

    9 func: FUNC IDENT . LPAREN param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE
   10     | FUNC IDENT . LPAREN RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE

    LPAREN  shift, and go to state 20


State 17

   12 main_block: MAIN $@1 . block

    LBRACE  shift, and go to state 21

    block  go to state 22


State 18

    1 program: PROGRAM IDENT LBRACE struct_def_list func_def main_block RBRACE .

    $default  reduce using rule 1 (program)


State 19

    4 struct_def_stmt: STRUCT_DEF IDENT LBRACE struct_member_list . RBRACE SEMICOLON
    6 struct_member_list: struct_member_list . declare_stmt SEMICOLON

    LET     shift, and go to state 23
    RBRACE  shift, and go to state 24

    declare_stmt  go to state 25


State 20

    9 func: FUNC IDENT LPAREN . param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE
   10     | FUNC IDENT LPAREN . RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE

    IDENT   shift, and go to state 26
    RPAREN  shift, and go to state 27

    param_list  go to state 28


State 21

   73 block: LBRACE . $@2 stmt_list RBRACE

    $default  reduce using rule 72 ($@2)

    $@2  go to state 29


State 22

   12 main_block: MAIN $@1 block .

    $default  reduce using rule 12 (main_block)


State 23

   33 declare_stmt: LET . IDENT
   34             | LET . IDENT ASSIGN expr

    IDENT  shift, and go to state 30


State 24

    4 struct_def_stmt: STRUCT_DEF IDENT LBRACE struct_member_list RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 25

    6 struct_member_list: struct_member_list declare_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 26

   13 param_list: IDENT .

    $default  reduce using rule 13 (param_list)


State 27

   10 func: FUNC IDENT LPAREN RPAREN . LBRACE stmt_list RETURN expr SEMICOLON RBRACE

    LBRACE  shift, and go to state 33


State 28

    9 func: FUNC IDENT LPAREN param_list . RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE
   14 param_list: param_list . COMMA IDENT

    RPAREN  shift, and go to state 34
    COMMA   shift, and go to state 35


State 29

   73 block: LBRACE $@2 . stmt_list RBRACE

    IDENT     shift, and go to state 36
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42

    stmt_list            go to state 43
    stmt                 go to state 44
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 30

   33 declare_stmt: LET IDENT .
   34             | LET IDENT . ASSIGN expr

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 33 (declare_stmt)


State 31

    4 struct_def_stmt: STRUCT_DEF IDENT LBRACE struct_member_list RBRACE SEMICOLON .

    $default  reduce using rule 4 (struct_def_stmt)


State 32

    6 struct_member_list: struct_member_list declare_stmt SEMICOLON .

    $default  reduce using rule 6 (struct_member_list)


State 33

   10 func: FUNC IDENT LPAREN RPAREN LBRACE . stmt_list RETURN expr SEMICOLON RBRACE

    IDENT     shift, and go to state 36
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42

    stmt_list            go to state 56
    stmt                 go to state 44
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 34

    9 func: FUNC IDENT LPAREN param_list RPAREN . LBRACE stmt_list RETURN expr SEMICOLON RBRACE

    LBRACE  shift, and go to state 57


State 35

   14 param_list: param_list COMMA . IDENT

    IDENT  shift, and go to state 58


State 36

   36 lvalue: IDENT .
   37       | IDENT . DOT IDENT
   38       | IDENT . LBRACKET expr RBRACKET
   44 func_call: IDENT . LPAREN arg_list RPAREN
   45          | IDENT . LPAREN RPAREN

    LPAREN    shift, and go to state 59
    LBRACKET  shift, and go to state 60
    DOT       shift, and go to state 61

    $default  reduce using rule 36 (lvalue)


State 37

   39 if_stmt: IF . LPAREN bool_expr RPAREN block
   40        | IF . LPAREN bool_expr RPAREN block ELSE block

    LPAREN  shift, and go to state 62


State 38

   41 while_stmt: WHILE . LPAREN bool_expr RPAREN block

    LPAREN  shift, and go to state 63


State 39

   42 input_stmt: INPUT . LPAREN ident_list RPAREN

    LPAREN  shift, and go to state 64


State 40

   43 output_stmt: OUTPUT . LPAREN expr_list RPAREN

    LPAREN  shift, and go to state 65


State 41

   26 struct_declare_stmt: STRUCT . IDENT IDENT ASSIGN LBRACE struct_init_list RBRACE
   27                    | STRUCT . IDENT IDENT

    IDENT  shift, and go to state 66


State 42

   30 array_declare_stmt: LBRACKET . NUMBER RBRACKET IDENT ASSIGN LBRACE number_list RBRACE

    NUMBER  shift, and go to state 67


State 43

   16 stmt_list: stmt_list . stmt SEMICOLON
   73 block: LBRACE $@2 stmt_list . RBRACE

    IDENT     shift, and go to state 36
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42
    RBRACE    shift, and go to state 68

    stmt                 go to state 69
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 44

   15 stmt_list: stmt . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 45

   19 stmt: struct_declare_stmt .

    $default  reduce using rule 19 (stmt)


State 46

   18 stmt: array_declare_stmt .

    $default  reduce using rule 18 (stmt)


State 47

   17 stmt: declare_stmt .

    $default  reduce using rule 17 (stmt)


State 48

   20 stmt: assign_stmt .

    $default  reduce using rule 20 (stmt)


State 49

   35 assign_stmt: lvalue . ASSIGN expr

    ASSIGN  shift, and go to state 71


State 50

   21 stmt: if_stmt .

    $default  reduce using rule 21 (stmt)


State 51

   22 stmt: while_stmt .

    $default  reduce using rule 22 (stmt)


State 52

   23 stmt: input_stmt .

    $default  reduce using rule 23 (stmt)


State 53

   24 stmt: output_stmt .

    $default  reduce using rule 24 (stmt)


State 54

   25 stmt: func_call .

    $default  reduce using rule 25 (stmt)


State 55

   34 declare_stmt: LET IDENT ASSIGN . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 78
    term       go to state 79
    factor     go to state 80


State 56

   10 func: FUNC IDENT LPAREN RPAREN LBRACE stmt_list . RETURN expr SEMICOLON RBRACE
   16 stmt_list: stmt_list . stmt SEMICOLON

    IDENT     shift, and go to state 36
    RETURN    shift, and go to state 81
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42

    stmt                 go to state 69
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 57

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE . stmt_list RETURN expr SEMICOLON RBRACE

    IDENT     shift, and go to state 36
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42

    stmt_list            go to state 82
    stmt                 go to state 44
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 58

   14 param_list: param_list COMMA IDENT .

    $default  reduce using rule 14 (param_list)


State 59

   44 func_call: IDENT LPAREN . arg_list RPAREN
   45          | IDENT LPAREN . RPAREN

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76
    RPAREN  shift, and go to state 83

    func_call  go to state 77
    arg_list   go to state 84
    expr       go to state 85
    term       go to state 79
    factor     go to state 80


State 60

   38 lvalue: IDENT LBRACKET . expr RBRACKET

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 86
    term       go to state 79
    factor     go to state 80


State 61

   37 lvalue: IDENT DOT . IDENT

    IDENT  shift, and go to state 87


State 62

   39 if_stmt: IF LPAREN . bool_expr RPAREN block
   40        | IF LPAREN . bool_expr RPAREN block ELSE block

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    bool_expr  go to state 88
    expr       go to state 89
    term       go to state 79
    factor     go to state 80


State 63

   41 while_stmt: WHILE LPAREN . bool_expr RPAREN block

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    bool_expr  go to state 90
    expr       go to state 89
    term       go to state 79
    factor     go to state 80


State 64

   42 input_stmt: INPUT LPAREN . ident_list RPAREN

    IDENT  shift, and go to state 91

    ident_list  go to state 92


State 65

   43 output_stmt: OUTPUT LPAREN . expr_list RPAREN

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr_list  go to state 93
    expr       go to state 94
    term       go to state 79
    factor     go to state 80


State 66

   26 struct_declare_stmt: STRUCT IDENT . IDENT ASSIGN LBRACE struct_init_list RBRACE
   27                    | STRUCT IDENT . IDENT

    IDENT  shift, and go to state 95


State 67

   30 array_declare_stmt: LBRACKET NUMBER . RBRACKET IDENT ASSIGN LBRACE number_list RBRACE

    RBRACKET  shift, and go to state 96


State 68

   73 block: LBRACE $@2 stmt_list RBRACE .

    $default  reduce using rule 73 (block)


State 69

   16 stmt_list: stmt_list stmt . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 70

   15 stmt_list: stmt SEMICOLON .

    $default  reduce using rule 15 (stmt_list)


State 71

   35 assign_stmt: lvalue ASSIGN . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 98
    term       go to state 79
    factor     go to state 80


State 72

   69 factor: NUMBER .

    $default  reduce using rule 69 (factor)


State 73

   44 func_call: IDENT . LPAREN arg_list RPAREN
   45          | IDENT . LPAREN RPAREN
   66 factor: IDENT .
   67       | IDENT . DOT IDENT
   68       | IDENT . LBRACKET expr RBRACKET

    LPAREN    shift, and go to state 59
    LBRACKET  shift, and go to state 99
    DOT       shift, and go to state 100

    $default  reduce using rule 66 (factor)


State 74

   58 expr: PLUS . term

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    term       go to state 101
    factor     go to state 80


State 75

   59 expr: MINUS . term

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    term       go to state 102
    factor     go to state 80


State 76

   70 factor: LPAREN . expr RPAREN

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 103
    term       go to state 79
    factor     go to state 80


State 77

   71 factor: func_call .

    $default  reduce using rule 71 (factor)


State 78

   34 declare_stmt: LET IDENT ASSIGN expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 34 (declare_stmt)


State 79

   60 expr: term .
   63 term: term . MUL factor
   64     | term . DIV factor

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107

    $default  reduce using rule 60 (expr)


State 80

   65 term: factor .

    $default  reduce using rule 65 (term)


State 81

   10 func: FUNC IDENT LPAREN RPAREN LBRACE stmt_list RETURN . expr SEMICOLON RBRACE

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 108
    term       go to state 79
    factor     go to state 80


State 82

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list . RETURN expr SEMICOLON RBRACE
   16 stmt_list: stmt_list . stmt SEMICOLON

    IDENT     shift, and go to state 36
    RETURN    shift, and go to state 109
    LET       shift, and go to state 23
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    INPUT     shift, and go to state 39
    OUTPUT    shift, and go to state 40
    STRUCT    shift, and go to state 41
    LBRACKET  shift, and go to state 42

    stmt                 go to state 69
    struct_declare_stmt  go to state 45
    array_declare_stmt   go to state 46
    declare_stmt         go to state 47
    assign_stmt          go to state 48
    lvalue               go to state 49
    if_stmt              go to state 50
    while_stmt           go to state 51
    input_stmt           go to state 52
    output_stmt          go to state 53
    func_call            go to state 54


State 83

   45 func_call: IDENT LPAREN RPAREN .

    $default  reduce using rule 45 (func_call)


State 84

   44 func_call: IDENT LPAREN arg_list . RPAREN
   47 arg_list: arg_list . COMMA expr

    RPAREN  shift, and go to state 110
    COMMA   shift, and go to state 111


State 85

   46 arg_list: expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 46 (arg_list)


State 86

   38 lvalue: IDENT LBRACKET expr . RBRACKET
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS      shift, and go to state 104
    MINUS     shift, and go to state 105
    RBRACKET  shift, and go to state 112


State 87

   37 lvalue: IDENT DOT IDENT .

    $default  reduce using rule 37 (lvalue)


State 88

   39 if_stmt: IF LPAREN bool_expr . RPAREN block
   40        | IF LPAREN bool_expr . RPAREN block ELSE block

    RPAREN  shift, and go to state 113


State 89

   52 bool_expr: expr . EQ expr
   53          | expr . NEQ expr
   54          | expr . LT expr
   55          | expr . GEQ expr
   56          | expr . GT expr
   57          | expr . LEQ expr
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LEQ    shift, and go to state 116
    GEQ    shift, and go to state 117
    LT     shift, and go to state 118
    GT     shift, and go to state 119
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105


State 90

   41 while_stmt: WHILE LPAREN bool_expr . RPAREN block

    RPAREN  shift, and go to state 120


State 91

   50 ident_list: IDENT .

    $default  reduce using rule 50 (ident_list)


State 92

   42 input_stmt: INPUT LPAREN ident_list . RPAREN
   51 ident_list: ident_list . COMMA IDENT

    RPAREN  shift, and go to state 121
    COMMA   shift, and go to state 122


State 93

   43 output_stmt: OUTPUT LPAREN expr_list . RPAREN
   49 expr_list: expr_list . COMMA expr

    RPAREN  shift, and go to state 123
    COMMA   shift, and go to state 124


State 94

   48 expr_list: expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 48 (expr_list)


State 95

   26 struct_declare_stmt: STRUCT IDENT IDENT . ASSIGN LBRACE struct_init_list RBRACE
   27                    | STRUCT IDENT IDENT .

    ASSIGN  shift, and go to state 125

    $default  reduce using rule 27 (struct_declare_stmt)


State 96

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET . IDENT ASSIGN LBRACE number_list RBRACE

    IDENT  shift, and go to state 126


State 97

   16 stmt_list: stmt_list stmt SEMICOLON .

    $default  reduce using rule 16 (stmt_list)


State 98

   35 assign_stmt: lvalue ASSIGN expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 35 (assign_stmt)


State 99

   68 factor: IDENT LBRACKET . expr RBRACKET

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 127
    term       go to state 79
    factor     go to state 80


State 100

   67 factor: IDENT DOT . IDENT

    IDENT  shift, and go to state 128


State 101

   58 expr: PLUS term .
   63 term: term . MUL factor
   64     | term . DIV factor

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107

    $default  reduce using rule 58 (expr)


State 102

   59 expr: MINUS term .
   63 term: term . MUL factor
   64     | term . DIV factor

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107

    $default  reduce using rule 59 (expr)


State 103

   61 expr: expr . PLUS term
   62     | expr . MINUS term
   70 factor: LPAREN expr . RPAREN

    PLUS    shift, and go to state 104
    MINUS   shift, and go to state 105
    RPAREN  shift, and go to state 129


State 104

   61 expr: expr PLUS . term

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    term       go to state 130
    factor     go to state 80


State 105

   62 expr: expr MINUS . term

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    term       go to state 131
    factor     go to state 80


State 106

   63 term: term MUL . factor

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    factor     go to state 132


State 107

   64 term: term DIV . factor

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    factor     go to state 133


State 108

   10 func: FUNC IDENT LPAREN RPAREN LBRACE stmt_list RETURN expr . SEMICOLON RBRACE
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS       shift, and go to state 104
    MINUS      shift, and go to state 105
    SEMICOLON  shift, and go to state 134


State 109

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN . expr SEMICOLON RBRACE

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 135
    term       go to state 79
    factor     go to state 80


State 110

   44 func_call: IDENT LPAREN arg_list RPAREN .

    $default  reduce using rule 44 (func_call)


State 111

   47 arg_list: arg_list COMMA . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 136
    term       go to state 79
    factor     go to state 80


State 112

   38 lvalue: IDENT LBRACKET expr RBRACKET .

    $default  reduce using rule 38 (lvalue)


State 113

   39 if_stmt: IF LPAREN bool_expr RPAREN . block
   40        | IF LPAREN bool_expr RPAREN . block ELSE block

    LBRACE  shift, and go to state 21

    block  go to state 137


State 114

   52 bool_expr: expr EQ . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 138
    term       go to state 79
    factor     go to state 80


State 115

   53 bool_expr: expr NEQ . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 139
    term       go to state 79
    factor     go to state 80


State 116

   57 bool_expr: expr LEQ . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 140
    term       go to state 79
    factor     go to state 80


State 117

   55 bool_expr: expr GEQ . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 141
    term       go to state 79
    factor     go to state 80


State 118

   54 bool_expr: expr LT . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 142
    term       go to state 79
    factor     go to state 80


State 119

   56 bool_expr: expr GT . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 143
    term       go to state 79
    factor     go to state 80


State 120

   41 while_stmt: WHILE LPAREN bool_expr RPAREN . block

    LBRACE  shift, and go to state 21

    block  go to state 144


State 121

   42 input_stmt: INPUT LPAREN ident_list RPAREN .

    $default  reduce using rule 42 (input_stmt)


State 122

   51 ident_list: ident_list COMMA . IDENT

    IDENT  shift, and go to state 145


State 123

   43 output_stmt: OUTPUT LPAREN expr_list RPAREN .

    $default  reduce using rule 43 (output_stmt)


State 124

   49 expr_list: expr_list COMMA . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 146
    term       go to state 79
    factor     go to state 80


State 125

   26 struct_declare_stmt: STRUCT IDENT IDENT ASSIGN . LBRACE struct_init_list RBRACE

    LBRACE  shift, and go to state 147


State 126

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT . ASSIGN LBRACE number_list RBRACE

    ASSIGN  shift, and go to state 148


State 127

   61 expr: expr . PLUS term
   62     | expr . MINUS term
   68 factor: IDENT LBRACKET expr . RBRACKET

    PLUS      shift, and go to state 104
    MINUS     shift, and go to state 105
    RBRACKET  shift, and go to state 149


State 128

   67 factor: IDENT DOT IDENT .

    $default  reduce using rule 67 (factor)


State 129

   70 factor: LPAREN expr RPAREN .

    $default  reduce using rule 70 (factor)


State 130

   61 expr: expr PLUS term .
   63 term: term . MUL factor
   64     | term . DIV factor

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107

    $default  reduce using rule 61 (expr)


State 131

   62 expr: expr MINUS term .
   63 term: term . MUL factor
   64     | term . DIV factor

    MUL  shift, and go to state 106
    DIV  shift, and go to state 107

    $default  reduce using rule 62 (expr)


State 132

   63 term: term MUL factor .

    $default  reduce using rule 63 (term)


State 133

   64 term: term DIV factor .

    $default  reduce using rule 64 (term)


State 134

   10 func: FUNC IDENT LPAREN RPAREN LBRACE stmt_list RETURN expr SEMICOLON . RBRACE

    RBRACE  shift, and go to state 150


State 135

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN expr . SEMICOLON RBRACE
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS       shift, and go to state 104
    MINUS      shift, and go to state 105
    SEMICOLON  shift, and go to state 151


State 136

   47 arg_list: arg_list COMMA expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 47 (arg_list)


State 137

   39 if_stmt: IF LPAREN bool_expr RPAREN block .
   40        | IF LPAREN bool_expr RPAREN block . ELSE block

    ELSE  shift, and go to state 152

    $default  reduce using rule 39 (if_stmt)


State 138

   52 bool_expr: expr EQ expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 52 (bool_expr)


State 139

   53 bool_expr: expr NEQ expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 53 (bool_expr)


State 140

   57 bool_expr: expr LEQ expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 57 (bool_expr)


State 141

   55 bool_expr: expr GEQ expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 55 (bool_expr)


State 142

   54 bool_expr: expr LT expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 54 (bool_expr)


State 143

   56 bool_expr: expr GT expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 56 (bool_expr)


State 144

   41 while_stmt: WHILE LPAREN bool_expr RPAREN block .

    $default  reduce using rule 41 (while_stmt)


State 145

   51 ident_list: ident_list COMMA IDENT .

    $default  reduce using rule 51 (ident_list)


State 146

   49 expr_list: expr_list COMMA expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 49 (expr_list)


State 147

   26 struct_declare_stmt: STRUCT IDENT IDENT ASSIGN LBRACE . struct_init_list RBRACE

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    struct_init_list  go to state 153
    func_call         go to state 77
    expr              go to state 154
    term              go to state 79
    factor            go to state 80


State 148

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT ASSIGN . LBRACE number_list RBRACE

    LBRACE  shift, and go to state 155


State 149

   68 factor: IDENT LBRACKET expr RBRACKET .

    $default  reduce using rule 68 (factor)


State 150

   10 func: FUNC IDENT LPAREN RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE .

    $default  reduce using rule 10 (func)


State 151

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON . RBRACE

    RBRACE  shift, and go to state 156


State 152

   40 if_stmt: IF LPAREN bool_expr RPAREN block ELSE . block

    LBRACE  shift, and go to state 21

    block  go to state 157


State 153

   26 struct_declare_stmt: STRUCT IDENT IDENT ASSIGN LBRACE struct_init_list . RBRACE
   29 struct_init_list: struct_init_list . COMMA expr

    RBRACE  shift, and go to state 158
    COMMA   shift, and go to state 159


State 154

   28 struct_init_list: expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 28 (struct_init_list)


State 155

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT ASSIGN LBRACE . number_list RBRACE

    NUMBER  shift, and go to state 160

    number_list  go to state 161


State 156

    9 func: FUNC IDENT LPAREN param_list RPAREN LBRACE stmt_list RETURN expr SEMICOLON RBRACE .

    $default  reduce using rule 9 (func)


State 157

   40 if_stmt: IF LPAREN bool_expr RPAREN block ELSE block .

    $default  reduce using rule 40 (if_stmt)


State 158

   26 struct_declare_stmt: STRUCT IDENT IDENT ASSIGN LBRACE struct_init_list RBRACE .

    $default  reduce using rule 26 (struct_declare_stmt)


State 159

   29 struct_init_list: struct_init_list COMMA . expr

    NUMBER  shift, and go to state 72
    IDENT   shift, and go to state 73
    PLUS    shift, and go to state 74
    MINUS   shift, and go to state 75
    LPAREN  shift, and go to state 76

    func_call  go to state 77
    expr       go to state 162
    term       go to state 79
    factor     go to state 80


State 160

   31 number_list: NUMBER .

    $default  reduce using rule 31 (number_list)


State 161

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT ASSIGN LBRACE number_list . RBRACE
   32 number_list: number_list . COMMA NUMBER

    RBRACE  shift, and go to state 163
    COMMA   shift, and go to state 164


State 162

   29 struct_init_list: struct_init_list COMMA expr .
   61 expr: expr . PLUS term
   62     | expr . MINUS term

    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105

    $default  reduce using rule 29 (struct_init_list)


State 163

   30 array_declare_stmt: LBRACKET NUMBER RBRACKET IDENT ASSIGN LBRACE number_list RBRACE .

    $default  reduce using rule 30 (array_declare_stmt)


State 164

   32 number_list: number_list COMMA . NUMBER

    NUMBER  shift, and go to state 165


State 165

   32 number_list: number_list COMMA NUMBER .

    $default  reduce using rule 32 (number_list)
